(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{468:function(t,e,s){"use strict";s.r(e);var r=s(1),a=Object(r.a)({},(function(){var t=this._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("h2",{attrs:{id:"为什么vue中的v-if和v-for不建议一起使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#为什么vue中的v-if和v-for不建议一起使用"}},[this._v("#")]),this._v(" 为什么Vue中的v-if和v-for不建议一起使用？")]),this._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("Vue中的v-if是用于条件渲染某个节点，当它的属性值为布尔值true时才渲染节点，v-for是循环创建节点，一般需要添加唯一的key作为节点的标识便于diff算法的进行，在Vue2中如果v-if和v-f or在同一标签使用，会导致渲染时先执行v-for的循环渲染再执行v-if的条件判断，这样就可能会造成不必要的性能浪费，在vue3中v-if的优先级比v-for的高，它条件判断调用的变量可能还不存在就会导致异常，同时有可能导致渲染本应该隐藏的节点，所以不管Vue2还是Vue3都不建议v-if和v-for一起使用，一般会在标签外包裹一层template标签作条件判断。\n")])])])])}),[],!1,null,null,null);e.default=a.exports}}]);